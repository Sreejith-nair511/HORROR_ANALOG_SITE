"use client"

import { useState, useEffect, useRef } from "react"
import { Button } from "@/components/ui/button"
import { Card } from "@/components/ui/card"
import { ArrowLeft, Home, Volume2, VolumeX } from "lucide-react"

interface BenningtonPageProps {
  playerName: string
  onNavigate: (page: string) => void
  onRestart: () => void
  audioEnabled: boolean
  onToggleAudio: () => void
  onUnlockLocation: (location: string) => void
  onAddClue: (clue: string) => void
}

export default function BenningtonPage({
  playerName,
  onNavigate,
  onRestart,
  audioEnabled,
  onToggleAudio,
  onUnlockLocation,
  onAddClue,
}: BenningtonPageProps) {
  const [currentScene, setCurrentScene] = useState("arrival")
  const [displayedText, setDisplayedText] = useState("")
  const [isTyping, setIsTyping] = useState(false)
  const [showChoices, setShowChoices] = useState(false)
  const typewriterRef = useRef<NodeJS.Timeout>()
  const audioRef = useRef<HTMLAudioElement | null>(null)

  const scenes = {
    arrival: {
      title: "ðŸŒ² BENNINGTON TRIANGLE - TEMPORAL DISPLACEMENT STUDIES",
      text: `Agent ${playerName}, you've accessed the classified Bennington Triangle files. Between 1945 and 1950, five people vanished without a trace in this Vermont wilderness area. Official reports blame natural causes, but classified documents reveal something far more sinister: temporal displacement experiments. The missing persons weren't lost - they were displaced in time as test subjects for chronological manipulation technology. Electromagnetic anomalies in the area create "time pockets" where past, present, and future intersect. The experiments were designed to study how human consciousness responds to temporal displacement and whether people could be moved through time while retaining their memories and identities.`,
      choices: [
        { text: "Investigate the temporal anomalies", scene: "temporal_anomalies" },
        { text: "Study the missing persons cases", scene: "missing_persons" },
        { text: "Examine the displacement technology", scene: "displacement_tech" },
      ],
    },
    temporal_anomalies: {
      title: "ELECTROMAGNETIC TIME DISTORTIONS",
      text: `Agent ${playerName}, the temporal anomalies in Bennington Triangle are artificially generated by hidden electromagnetic field generators buried throughout the forest. These devices create localized distortions in spacetime, allowing for controlled temporal displacement. The technology was developed from recovered artifacts of unknown origin, possibly extraterrestrial or from a future timeline. The anomalies don't just move people through time - they fragment their consciousness across multiple temporal states. Victims experience past, present, and future simultaneously, making them ideal test subjects for studying the nature of human consciousness and its relationship to linear time.`,
      choices: [
        { text: "Locate the field generators", scene: "field_generators" },
        { text: "Study consciousness fragmentation", scene: "consciousness_fragmentation" },
        { text: "Investigate the artifact origins", scene: "artifact_origins" },
      ],
    },
    missing_persons: {
      title: "THE DISPLACED SUBJECTS",
      text: `Agent ${playerName}, the missing persons weren't random victims - they were carefully selected test subjects. Each had specific psychological profiles: high intelligence, strong sense of identity, and resistance to authority. The experiments aimed to determine if temporal displacement could be used to "edit" human consciousness by exposing subjects to alternate timelines where they made different choices. Some subjects were returned to the present with modified memories and personalities. Others remain displaced across time, their consciousness scattered across multiple temporal states. The goal was to develop technology for retroactive population control - the ability to change the past to control the present.`,
      choices: [
        { text: "Track the returned subjects", scene: "returned_subjects" },
        { text: "Study consciousness editing", scene: "consciousness_editing" },
        { text: "Investigate retroactive control", scene: "retroactive_control" },
      ],
    },
    displacement_tech: {
      title: "CHRONOLOGICAL MANIPULATION TECHNOLOGY",
      text: `Agent ${playerName}, the displacement technology represents a breakthrough in temporal mechanics. The system can isolate individual consciousness from the timestream and move it to different temporal coordinates while keeping the body in the present. This creates a disconnect between mind and time, allowing researchers to study how consciousness perceives and processes temporal information. The technology has been refined over decades and is now being deployed through digital devices. Every smartphone, every smart TV, every connected device contains micro-displacement fields that create tiny temporal distortions in users' consciousness, making them more susceptible to manipulation and control.`,
      choices: [
        { text: "Study micro-displacement effects", scene: "micro_displacement" },
        { text: "Investigate digital deployment", scene: "digital_deployment" },
        { text: "Examine consciousness isolation", scene: "consciousness_isolation" },
      ],
    },
    consciousness_fragmentation: {
      title: "TEMPORAL CONSCIOUSNESS SPLITTING",
      text: `Agent ${playerName}, consciousness fragmentation reveals how human awareness can be split across multiple timelines simultaneously. Subjects experience their lives from multiple temporal perspectives - seeing how different choices led to different outcomes. This creates a form of temporal schizophrenia where the subject can no longer distinguish between what actually happened and what might have happened. The fragmentation process is now being used to create compliant populations by showing people alternate timelines where resistance to authority led to negative outcomes, conditioning them to accept control in the present timeline.`,
      choices: [
        { text: "Study temporal schizophrenia", scene: "temporal_schizophrenia" },
        { text: "Investigate compliance conditioning", scene: "compliance_conditioning" },
        { text: "Search for consciousness repair", scene: "consciousness_repair" },
      ],
    },
    retroactive_control: {
      title: "TIMELINE MANIPULATION PROTOCOL",
      text: `Agent ${playerName}, retroactive control represents the ultimate form of population management: the ability to change the past to control the present. The technology allows operators to identify "problem individuals" in the present and then send agents back in time to subtly alter events in those individuals' pasts. Small changes - a different school, a missed opportunity, a chance encounter - can completely reshape a person's development and eliminate their potential for resistance. The protocol has been used extensively to prevent the emergence of effective opposition leaders, innovative thinkers, and anyone who might threaten the control system.`,
      choices: [
        { text: "Investigate timeline alterations", scene: "timeline_alterations" },
        { text: "Study prevention protocols", scene: "prevention_protocols" },
        { text: "Search for temporal resistance", scene: "temporal_resistance" },
      ],
    },
    digital_deployment: {
      title: "MASS TEMPORAL CONDITIONING",
      text: `Agent ${playerName}, the digital deployment of temporal displacement technology represents the final phase of consciousness control. Every digital device now contains micro-displacement fields that create tiny temporal distortions in users' consciousness. These distortions make people more susceptible to suggestion, less able to form long-term plans, and increasingly focused on immediate gratification. The technology fragments attention across multiple temporal states, creating a population that lives in a perpetual present with no real connection to past or future. This temporal conditioning is why people can't seem to focus on long-term problems like climate change or political corruption - their consciousness has been artificially fragmented.`,
      choices: [
        { text: "Study attention fragmentation", scene: "attention_fragmentation" },
        { text: "Investigate temporal addiction", scene: "temporal_addiction" },
        { text: "Search for resistance methods", scene: "resistance_methods" },
      ],
    },
    temporal_resistance: {
      title: "THE CHRONOLOGICAL RESISTANCE NETWORK",
      text: `Agent ${playerName}, your investigation has revealed enough truth to access the temporal resistance network. There are others who have discovered the timeline manipulation protocols and are working to restore natural temporal flow. The resistance operates across multiple timelines, using the system's own technology to protect key individuals and preserve authentic historical events. They've developed techniques to detect temporal alterations, shield consciousness from displacement effects, and even rescue some subjects from temporal fragmentation. Your role is crucial: you must help identify timeline alterations and protect potential targets from retroactive elimination.`,
      choices: [
        { text: "Join the temporal resistance", scene: "join_resistance" },
        { text: "Investigate other sites first", scene: "continue_investigation" },
        { text: "Seek the digital vault", scene: "vault_access" },
      ],
    },
    vault_access: {
      title: "DIGITAL VAULT ACCESS GRANTED",
      text: `Agent ${playerName}, your investigation into the Bennington Triangle temporal displacement experiments has provided crucial intelligence about timeline manipulation and consciousness fragmentation. You've unlocked access to the deepest levels of the conspiracy. The Digital Vault of Truth awaits, where all the threads of your investigation will converge. But be warned: once you enter the vault, you'll see the complete picture of humanity's temporal enslavement, and there will be no going back to comfortable ignorance.`,
      choices: [
        { text: "Enter the Digital Vault", scene: "enter_vault" },
        { text: "Continue investigating other sites", scene: "return" },
      ],
    },
    return: {
      title: "INVESTIGATION CONTINUES",
      text: `Agent ${playerName}, you've uncovered crucial evidence of temporal displacement experiments and timeline manipulation protocols. The Bennington Triangle reveals how human consciousness can be fragmented across time and how the past can be altered to control the present. Your investigation must continue to reveal the full scope of the temporal control system.`,
      choices: [{ text: "Return to main investigation", scene: "main_menu" }],
    },
  }

  const typewriterEffect = (text: string) => {
    setDisplayedText("")
    setIsTyping(true)
    setShowChoices(false)

    let index = 0
    const speed = 50

    const type = () => {
      if (index < text.length) {
        setDisplayedText(text.slice(0, index + 1))
        index++
        typewriterRef.current = setTimeout(type, speed)
      } else {
        setIsTyping(false)
        setShowChoices(true)
      }
    }

    type()
  }

  useEffect(() => {
    if (scenes[currentScene as keyof typeof scenes]) {
      typewriterEffect(scenes[currentScene as keyof typeof scenes].text)

      // Add clues based on scenes visited
      if (currentScene === "temporal_anomalies") {
        onAddClue("temporal_displacement_technology")
      }
      if (currentScene === "retroactive_control") {
        onAddClue("timeline_manipulation_protocol")
      }
    }
  }, [currentScene, playerName, onAddClue])

  useEffect(() => {
    return () => {
      if (typewriterRef.current) {
        clearTimeout(typewriterRef.current)
      }
    }
  }, [])

  useEffect(() => {
    if (typeof window !== "undefined") {
      audioRef.current = new Audio("/audio/tense-horror-background.mp3")
      audioRef.current.loop = true
      audioRef.current.volume = 0.2
      audioRef.current.preload = "auto"

      if (audioEnabled) {
        const playPromise = audioRef.current.play()
        if (playPromise !== undefined) {
          playPromise.catch((e) => {
            console.log("Audio autoplay failed:", e)
          })
        }
      }
    }

    return () => {
      if (audioRef.current) {
        audioRef.current.pause()
        audioRef.current = null
      }
    }
  }, [])

  useEffect(() => {
    if (audioRef.current) {
      if (audioEnabled) {
        const playPromise = audioRef.current.play()
        if (playPromise !== undefined) {
          playPromise.catch((e) => {
            console.log("Audio play failed:", e)
          })
        }
      } else {
        audioRef.current.pause()
      }
    }
  }, [audioEnabled])

  const scene = scenes[currentScene as keyof typeof scenes]
  if (!scene) return null

  return (
    <div className="min-h-screen horror-bg text-green-400 font-mono p-3 relative overflow-hidden">
      <div className="absolute inset-0 bg-gradient-to-b from-black via-gray-900 to-black opacity-90"></div>

      <div className="relative z-10 max-w-4xl mx-auto">
        <div className="flex justify-between items-center mb-4 sm:mb-6">
          <h1 className="text-xl sm:text-2xl font-bold text-red-500 glitch-text">{scene.title}</h1>
          <div className="flex gap-2">
            <Button
              onClick={() => onNavigate("")}
              variant="outline"
              size="sm"
              className="border-yellow-400 text-yellow-400 hover:bg-yellow-400 hover:text-black touch-action-manipulation"
            >
              <ArrowLeft className="w-4 h-4" />
            </Button>
            <Button
              onClick={onRestart}
              variant="outline"
              size="sm"
              className="border-red-400 text-red-400 hover:bg-red-400 hover:text-black touch-action-manipulation"
            >
              <Home className="w-4 h-4" />
            </Button>
            <Button
              onClick={onToggleAudio}
              variant="outline"
              size="sm"
              className={`${
                audioEnabled
                  ? "border-green-400 text-green-400 hover:bg-green-400"
                  : "border-gray-500 text-gray-400 hover:bg-gray-500"
              } hover:text-black touch-action-manipulation`}
            >
              {audioEnabled ? <Volume2 className="w-4 h-4" /> : <VolumeX className="w-4 h-4" />}
            </Button>
          </div>
        </div>

        <Card className="bg-black/90 border-green-400 border-2 p-4 sm:p-6 mb-4 min-h-[300px] sm:min-h-[400px] shadow-2xl shadow-green-500/20 screen-flicker backdrop-blur-sm">
          <div className="text-green-300 leading-relaxed text-sm sm:text-base mb-4">
            {displayedText}
            {isTyping && <span className="typewriter-cursor text-red-500">â–ˆ</span>}
          </div>

          {showChoices && scene.choices && (
            <div className="space-y-3 animate-fade-in">
              {scene.choices.map((choice, index) => (
                <Button
                  key={index}
                  onClick={() => {
                    if (choice.scene === "main_menu") {
                      onNavigate("")
                    } else if (choice.scene === "enter_vault") {
                      onNavigate("digital-vault")
                    } else if (choice.scene === "return") {
                      onNavigate("")
                    } else {
                      setCurrentScene(choice.scene)
                    }
                  }}
                  className="w-full text-left justify-start bg-gray-900/80 border-red-500 text-red-400 hover:bg-red-900 hover:text-white button-horror p-4 h-auto backdrop-blur-sm touch-action-manipulation"
                  variant="outline"
                >
                  <span className="text-red-600 mr-2">{">"}</span>
                  {choice.text}
                </Button>
              ))}
            </div>
          )}
        </Card>

        <div className="text-xs px-2 text-gray-500 text-center space-y-1">
          <p className="text-glow">Location: Bennington Triangle | Temporal Status: UNSTABLE</p>
          <p className="animate-pulse text-red-400">{">"} Timeline displacement detected</p>
        </div>
      </div>

      <style jsx>{`
        .glitch-text {
          animation: glitch 3s infinite;
          text-shadow: 
            0 0 5px #ff0000,
            0 0 10px #ff0000,
            0 0 15px #ff0000,
            0 0 20px #ff0000;
        }
        
        .animate-fade-in {
          animation: fadeIn 1s ease-in;
        }
        
        .horror-bg {
          background: 
            radial-gradient(circle at 20% 80%, rgba(120, 0, 0, 0.3) 0%, transparent 50%),
            radial-gradient(circle at 80% 20%, rgba(120, 0, 0, 0.3) 0%, transparent 50%),
            linear-gradient(180deg, #000000 0%, #1a0000 50%, #000000 100%);
          animation: backgroundPulse 4s ease-in-out infinite;
        }
        
        .button-horror {
          transition: all 0.3s ease;
          position: relative;
          overflow: hidden;
        }
        
        .button-horror:hover {
          transform: translateY(-2px);
          box-shadow: 
            0 5px 15px rgba(255, 0, 0, 0.4),
            inset 0 0 20px rgba(255, 0, 0, 0.1);
        }
        
        .typewriter-cursor {
          animation: blink 1s infinite;
        }
        
        .screen-flicker {
          animation: flicker 0.15s infinite linear;
        }
        
        .text-glow {
          text-shadow: 
            0 0 5px currentColor,
            0 0 10px currentColor,
            0 0 15px currentColor;
        }
        
        @keyframes glitch {
          0%, 100% { 
            transform: translate(0);
            filter: hue-rotate(0deg);
          }
          10% { 
            transform: translate(-2px, -1px);
            filter: hue-rotate(90deg);
          }
          20% { 
            transform: translate(2px, 1px);
            filter: hue-rotate(180deg);
          }
          30% { 
            transform: translate(-1px, 2px);
            filter: hue-rotate(270deg);
          }
          40% { 
            transform: translate(1px, -1px);
            filter: hue-rotate(360deg);
          }
          50% { 
            transform: translate(-2px, 1px);
            filter: hue-rotate(90deg);
          }
          60% { 
            transform: translate(2px, -2px);
            filter: hue-rotate(180deg);
          }
          70% { 
            transform: translate(-1px, 1px);
            filter: hue-rotate(270deg);
          }
          80% { 
            transform: translate(1px, 2px);
            filter: hue-rotate(360deg);
          }
          90% { 
            transform: translate(-2px, -1px);
            filter: hue-rotate(90deg);
          }
        }
        
        @keyframes fadeIn {
          from { 
            opacity: 0; 
            transform: translateY(20px) scale(0.95);
            filter: blur(2px);
          }
          to { 
            opacity: 1; 
            transform: translateY(0) scale(1);
            filter: blur(0);
          }
        }
        
        @keyframes backgroundPulse {
          0%, 100% { filter: brightness(1) contrast(1); }
          50% { filter: brightness(1.1) contrast(1.2); }
        }
        
        @keyframes blink {
          0%, 50% { opacity: 1; }
          51%, 100% { opacity: 0; }
        }
        
        @keyframes flicker {
          0%, 100% { opacity: 1; }
          50% { opacity: 0.8; }
        }
      `}</style>
    </div>
  )
}
